{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mios\\\\Proyectos\\\\frontend-taller\\\\src\\\\componentes\\\\Dashboard\\\\ListadoTrabajosDashBoard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useReactTable, getCoreRowModel, getPaginationRowModel, flexRender } from \"@tanstack/react-table\";\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListadoTrabajosDashBoard() {\n  _s();\n  const [trabajosList, setTrabajos] = useState([]);\n  const token = localStorage.getItem('token');\n  const columnas = [{\n    header: \"ID\",\n    accesorKey: 'id'\n  }, {\n    header: \"Detalle\",\n    accesorKey: 'detalleTrabajo'\n  }, {\n    header: \"Fecha\",\n    accesorKey: 'fechaTrabajo'\n  }, {\n    header: \"Prox. Mantención\",\n    accesorKey: 'fechaProxMantencion'\n  }, {\n    header: \"Rq. Notificación\",\n    accesorKey: 'requiereNotificacion'\n  }, {\n    header: \"Costo Trabajo\",\n    accesorKey: 'costoTotal'\n  }, {\n    header: \"Mecánico\",\n    accesorKey: 'nombreMecanico'\n  }, {\n    header: \"Estado\",\n    accesorKey: 'estadoTrabajo'\n  }];\n  useEffect(() => {\n    listarTrabajos();\n  }, []);\n  const listarTrabajos = async () => {\n    await Axios.get(\"http://localhost:8010/api/trabajos/listadoTrabajosAdmin\", {\n      headers: {\n        'Authorization': token\n      }\n    }).then(response => {\n      setTrabajos(response.data);\n    }).catch(error => {\n      console.error(\"Hubo un error al obtener la lista de insumos:\", error.response);\n    });\n  };\n  console.log(trabajosList);\n  const tabla = useReactTable({\n    data: trabajosList,\n    columns: columnas,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: tabla.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => {\n            var _header$column$getIsS;\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: header.column.getToggleSortingHandler(),\n              children: header.isPlaceholder ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [flexRender(header.column.columnDef.header, header.getContext()), {\n                  asc: \"⬆️\",\n                  desc: \"⬇️\"\n                }[(_header$column$getIsS = header.column.getIsSorted()) !== null && _header$column$getIsS !== void 0 ? _header$column$getIsS : null]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)\n            }, header.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this);\n          })\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tabla.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: tabla.getFooterGroups().map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: footerGroup.headers.map(footer => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: flexRender(footer.column.columnDef.footer, footer.getContext())\n          }, footer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this))\n        }, footerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(ListadoTrabajosDashBoard, \"UcKqeg2dLSnc+F0770upSm9/mos=\", false, function () {\n  return [useReactTable];\n});\n_c = ListadoTrabajosDashBoard;\nexport default ListadoTrabajosDashBoard;\nvar _c;\n$RefreshReg$(_c, \"ListadoTrabajosDashBoard\");","map":{"version":3,"names":["React","useReactTable","getCoreRowModel","getPaginationRowModel","flexRender","useState","useEffect","Axios","jsxDEV","_jsxDEV","ListadoTrabajosDashBoard","_s","trabajosList","setTrabajos","token","localStorage","getItem","columnas","header","accesorKey","listarTrabajos","get","headers","then","response","data","catch","error","console","log","tabla","columns","children","getHeaderGroups","map","headerGroup","_header$column$getIsS","onClick","column","getToggleSortingHandler","isPlaceholder","columnDef","getContext","asc","desc","getIsSorted","fileName","_jsxFileName","lineNumber","columnNumber","id","getRowModel","rows","row","getVisibleCells","cell","getFooterGroups","footerGroup","footer","_c","$RefreshReg$"],"sources":["C:/Mios/Proyectos/frontend-taller/src/componentes/Dashboard/ListadoTrabajosDashBoard.js"],"sourcesContent":["import React from \"react\";\r\nimport { useReactTable, getCoreRowModel, getPaginationRowModel, flexRender } from \"@tanstack/react-table\";\r\nimport { useState, useEffect } from \"react\";    \r\nimport Axios from \"axios\";\r\n\r\nfunction ListadoTrabajosDashBoard(){\r\n    const [trabajosList, setTrabajos] = useState([]);\r\n    const token = localStorage.getItem('token');\r\n    const columnas = [\r\n        {\r\n            header: \"ID\",\r\n            accesorKey: 'id'\r\n        },\r\n        {\r\n            header: \"Detalle\",\r\n            accesorKey: 'detalleTrabajo'\r\n        },\r\n        {\r\n            header: \"Fecha\",\r\n            accesorKey: 'fechaTrabajo'\r\n        },\r\n        {\r\n            header: \"Prox. Mantención\",\r\n            accesorKey: 'fechaProxMantencion'\r\n        },\r\n        {\r\n            header: \"Rq. Notificación\",\r\n            accesorKey: 'requiereNotificacion'\r\n        },\r\n        {\r\n            header: \"Costo Trabajo\",\r\n            accesorKey: 'costoTotal'\r\n        },\r\n        {\r\n            header: \"Mecánico\",\r\n            accesorKey: 'nombreMecanico'\r\n        },\r\n        {\r\n            header: \"Estado\",\r\n            accesorKey: 'estadoTrabajo'\r\n        }\r\n    ]\r\n    useEffect(() => {\r\n        listarTrabajos();\r\n    }, []);\r\n\r\n    const listarTrabajos = async() =>{\r\n        await Axios.get(\"http://localhost:8010/api/trabajos/listadoTrabajosAdmin\",{headers: {'Authorization': token,},})\r\n        .then((response) => {setTrabajos(response.data);})\r\n        .catch((error) => {console.error(\"Hubo un error al obtener la lista de insumos:\", error.response);});\r\n    };\r\n    console.log(trabajosList)\r\n    const tabla = useReactTable({data: trabajosList,columns: columnas, getCoreRowModel: getCoreRowModel(), getPaginationRowModel: getPaginationRowModel()});\r\n    return(\r\n        <div>\r\n      <table>\r\n        <thead>\r\n          {tabla.getHeaderGroups().map((headerGroup) => (\r\n            <tr key={headerGroup.id}>\r\n              {headerGroup.headers.map((header) => (\r\n                <th\r\n                  key={header.id}\r\n                  onClick={header.column.getToggleSortingHandler()}\r\n                >\r\n                  {header.isPlaceholder ? null : (\r\n                    <div>\r\n                      {flexRender(\r\n                        header.column.columnDef.header,\r\n                        header.getContext()\r\n                      )}\r\n\r\n                      {\r\n                        { asc: \"⬆️\", desc: \"⬇️\" }[\r\n                          header.column.getIsSorted() ?? null\r\n                        ]\r\n                      }\r\n                    </div>\r\n                  )}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody>\r\n          {tabla.getRowModel().rows.map((row) => (\r\n            <tr key={row.id}>\r\n              {row.getVisibleCells().map((cell) => (\r\n                <td>\r\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n        <tfoot>\r\n          {tabla.getFooterGroups().map((footerGroup) => (\r\n            <tr key={footerGroup.id}>\r\n              {footerGroup.headers.map((footer) => (\r\n                <th key={footer.id}>\r\n                  {flexRender(\r\n                    footer.column.columnDef.footer,\r\n                    footer.getContext()\r\n                  )}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListadoTrabajosDashBoard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}