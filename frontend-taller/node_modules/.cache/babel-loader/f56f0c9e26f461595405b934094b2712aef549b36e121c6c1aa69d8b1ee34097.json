{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mios\\\\Proyectos\\\\frontend-taller\\\\src\\\\componentes\\\\Dashboard\\\\ListadoTrabajosDashBoard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useReactTable, getCoreRowModel, getPaginationRowModel, flexRender } from \"@tanstack/react-table\";\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListadoTrabajosDashBoard() {\n  _s();\n  const [trabajosList, setTrabajos] = useState([]);\n  const token = localStorage.getItem('token');\n  const columnas = [{\n    header: \"ID\",\n    accesorKey: 'id'\n  }, {\n    header: \"Detalle\",\n    accesorKey: 'detalleTrabajo'\n  }, {\n    header: \"Fecha\",\n    accesorKey: 'fechaTrabajo'\n  }, {\n    header: \"Prox. Mantención\",\n    accesorKey: 'fechaProxMantencion'\n  }, {\n    header: \"Rq. Notificación\",\n    accesorKey: 'requiereNotificacion'\n  }, {\n    header: \"Costo Trabajo\",\n    accesorKey: 'costoTotal'\n  }, {\n    header: \"Mecánico\",\n    accesorKey: 'nombreMecanico'\n  }, {\n    header: \"Estado\",\n    accesorKey: 'estadoTrabajo'\n  }];\n  useEffect(() => {\n    listarTrabajos();\n  }, []);\n  const listarTrabajos = async () => {\n    await Axios.get(\"http://localhost:8010/api/trabajos/listadoTrabajosAdmin\", {\n      headers: {\n        'Authorization': token\n      }\n    }).then(response => {\n      setTrabajos(response.data);\n    }).catch(error => {\n      console.error(\"Hubo un error al obtener la lista de insumos:\", error.response);\n    });\n  };\n  const tabla = useReactTable({\n    data: trabajosList,\n    columns: columnas,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover table-responsive-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: tabla.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header.column.columnDef.header\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 41\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tabla.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Incio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Final\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(ListadoTrabajosDashBoard, \"UcKqeg2dLSnc+F0770upSm9/mos=\", false, function () {\n  return [useReactTable];\n});\n_c = ListadoTrabajosDashBoard;\nexport default ListadoTrabajosDashBoard;\nvar _c;\n$RefreshReg$(_c, \"ListadoTrabajosDashBoard\");","map":{"version":3,"names":["React","useReactTable","getCoreRowModel","getPaginationRowModel","flexRender","useState","useEffect","Axios","jsxDEV","_jsxDEV","ListadoTrabajosDashBoard","_s","trabajosList","setTrabajos","token","localStorage","getItem","columnas","header","accesorKey","listarTrabajos","get","headers","then","response","data","catch","error","console","tabla","columns","children","className","getHeaderGroups","map","headerGroup","column","columnDef","id","fileName","_jsxFileName","lineNumber","columnNumber","getRowModel","rows","row","getVisibleCells","cell","getContext","_c","$RefreshReg$"],"sources":["C:/Mios/Proyectos/frontend-taller/src/componentes/Dashboard/ListadoTrabajosDashBoard.js"],"sourcesContent":["import React from \"react\";\r\nimport { useReactTable, getCoreRowModel, getPaginationRowModel, flexRender } from \"@tanstack/react-table\";\r\nimport { useState, useEffect } from \"react\";    \r\nimport Axios from \"axios\";\r\n\r\nfunction ListadoTrabajosDashBoard(){\r\n    const [trabajosList, setTrabajos] = useState([]);\r\n    const token = localStorage.getItem('token');\r\n    const columnas = [\r\n        {\r\n            header: \"ID\",\r\n            accesorKey: 'id'\r\n        },\r\n        {\r\n            header: \"Detalle\",\r\n            accesorKey: 'detalleTrabajo'\r\n        },\r\n        {\r\n            header: \"Fecha\",\r\n            accesorKey: 'fechaTrabajo'\r\n        },\r\n        {\r\n            header: \"Prox. Mantención\",\r\n            accesorKey: 'fechaProxMantencion'\r\n        },\r\n        {\r\n            header: \"Rq. Notificación\",\r\n            accesorKey: 'requiereNotificacion'\r\n        },\r\n        {\r\n            header: \"Costo Trabajo\",\r\n            accesorKey: 'costoTotal'\r\n        },\r\n        {\r\n            header: \"Mecánico\",\r\n            accesorKey: 'nombreMecanico'\r\n        },\r\n        {\r\n            header: \"Estado\",\r\n            accesorKey: 'estadoTrabajo'\r\n        }\r\n    ]\r\n    useEffect(() => {\r\n        listarTrabajos();\r\n    }, []);\r\n\r\n    const listarTrabajos = async() =>{\r\n        await Axios.get(\"http://localhost:8010/api/trabajos/listadoTrabajosAdmin\",{headers: {'Authorization': token,},})\r\n        .then((response) => {setTrabajos(response.data);})\r\n        .catch((error) => {console.error(\"Hubo un error al obtener la lista de insumos:\", error.response);});\r\n    };\r\n    const tabla = useReactTable({data: trabajosList,columns: columnas, getCoreRowModel: getCoreRowModel(), getPaginationRowModel: getPaginationRowModel()});\r\n    return(\r\n        <div>\r\n            <table className=\"table table-hover table-responsive-lg\"> \r\n                <thead>\r\n                    {\r\n                       tabla.getHeaderGroups().map(headerGroup=> (\r\n                            <tr key={headerGroup.id}>\r\n                                {\r\n                                    headerGroup.headers.map(header=>(\r\n                                        <th key={header.id}>\r\n                                            {header.column.columnDef.header}\r\n                                        </th>\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        )) \r\n                    }\r\n                </thead>\r\n                <tbody>\r\n                {tabla.getRowModel().rows.map((row) => (\r\n            <tr key={row.id}>\r\n              {row.getVisibleCells().map((cell) => (\r\n                <td>\r\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n                </tbody>\r\n                <tfoot>\r\n                    <button>Incio</button>\r\n                    <button>Anterior</button>\r\n                    <button>Siguiente</button>\r\n                    <button>Final</button>\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListadoTrabajosDashBoard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}